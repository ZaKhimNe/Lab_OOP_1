#include <iostream>
#include <string>
using namespace std;

// Hàm kiểm tra chuỗi chỉ gồm các chữ số
bool isAllDigit(const string& str) {
    int start = 0;
    if (str[0] == '-'){ //Kiểm tra nếu input là số âm
        if (str.size() == 1) return false;
        start = 1;

    }
    for (size_t i = start; i < str.size(); i++) {
        if (!isdigit(str[i])) {
            return false; // Nếu có ký tự không phải số, trả về false
        }
    }
    return true; // Nếu tất cả ký tự là số, trả về true
}

class PhanSo {
private:
    string tuso;
    string mauso;

public:
    // Constructor mặc định
    PhanSo() : tuso("0"), mauso("1") {}

    // Constructor có tham số
    PhanSo(int tu, int mau) {
        tuso = to_string(tu);
        mauso = to_string(mau);
    }

    // Hàm nhập phân số
    void Nhap() {
        cout << "Nhap tu so: ";
        cin >> tuso;

        // Kiểm tra và nhập lại nếu tử không hợp lệ
        while (!isAllDigit(tuso)) {
            cout << "Khong hop le. Nhap lai tu so: ";
            cin >> tuso;
        }

        cout << "Nhap mau so (khac 0): ";
        cin >> mauso;

        // Kiểm tra và nhập lại nếu mẫu không hợp lệ hoặc bằng 0
        while (!isAllDigit(mauso) || stoi(mauso) == 0) {
            cout << "Khong hop le. Nhap lai mau so (khac 0): ";
            cin >> mauso;
        }
    }

    // Hàm xuất phân số
    void Xuat() {
        if (mauso != "1"  &&  tuso != "0") {
                cout << tuso << "/" << mauso << endl;
        }
        else {
                cout << tuso;
        }
    }

    // Hàm tính ước chung lớn nhất (GCD)
    int gcd(int a, int b) {
        a = abs(a);
        b = abs(b);
        while (b != 0) {
            int du = a % b;
            a = b;
            b = du;
        }
        return a;
    }

    // Hàm rút gọn phân số
    PhanSo RutGon() {
        int tu = stoi(tuso); // Chuyển string thành int để có thể tính toán
        int mau = stoi(mauso);
        int ucln = gcd(tu, mau);

        tu /= ucln;
        mau /= ucln;

        // Đảm bảo mẫu luôn dương
        if (mau < 0) {
            tu = -tu;
            mau = -mau;
        }

        return PhanSo(tu, mau);
    }
};

int main() {
    PhanSo a;
    a.Nhap();
    PhanSo rutGon = a.RutGon();
    cout << "Phan so sau khi rut gon: ";
    rutGon.Xuat();

    return 0;
}
